/*
 * Payneteasy Android Transfer DAPI
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.payneteasy.android.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Error
 */

public class Error {
  /**
   * The cause of the error
   */
  @JsonAdapter(CauseEnum.Adapter.class)
  public enum CauseEnum {
    FILTERED("FILTERED"),
    
    DECLINED("DECLINED"),
    
    INVALID_CONFIGURATION("INVALID_CONFIGURATION"),
    
    INVALID_REQUEST("INVALID_REQUEST"),
    
    INTERNAL_ERROR("INTERNAL_ERROR"),
    
    PROCESSING_FAILED("PROCESSING_FAILED"),
    
    SERVER_FAILED("SERVER_FAILED"),
    
    SERVER_UNAVAILABLE("SERVER_UNAVAILABLE"),
    
    ORDER_NOT_FOUND("ORDER_NOT_FOUND");

    private String value;

    CauseEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CauseEnum fromValue(String text) {
      for (CauseEnum b : CauseEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<CauseEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CauseEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CauseEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return CauseEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("cause")
  private CauseEnum cause = null;

  @SerializedName("code")
  private String code = null;

  @SerializedName("message")
  private String message = null;

  public Error cause(CauseEnum cause) {
    this.cause = cause;
    return this;
  }

   /**
   * The cause of the error
   * @return cause
  **/
  @ApiModelProperty(value = "The cause of the error")
  public CauseEnum getCause() {
    return cause;
  }

  public void setCause(CauseEnum cause) {
    this.cause = cause;
  }

  public Error code(String code) {
    this.code = code;
    return this;
  }

   /**
   * The unique error code
   * @return code
  **/
  @ApiModelProperty(value = "The unique error code")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Error message(String message) {
    this.message = message;
    return this;
  }

   /**
   * the description of the error
   * @return message
  **/
  @ApiModelProperty(value = "the description of the error")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Error error = (Error) o;
    return Objects.equals(this.cause, error.cause) &&
        Objects.equals(this.code, error.code) &&
        Objects.equals(this.message, error.message);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cause, code, message);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Error {\n");
    
    sb.append("    cause: ").append(toIndentedString(cause)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

